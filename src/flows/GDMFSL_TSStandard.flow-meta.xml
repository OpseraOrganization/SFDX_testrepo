<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <description>Assigns the interview start time to the the end time to the current travel TSE</description>
        <name>AssignEndtimeToTravelTSE</name>
        <label>AssignEndtimeToTravelTSE</label>
        <locationX>314</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>currTSETravel.EndTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetEndTimeForTravelTSE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns the end time of the timesheet entry with subject Check Out to the interview start time</description>
        <name>AssignEndTimeToTSECheckOut</name>
        <label>AssignEndTimeToTSECheckOut</label>
        <locationX>1370</locationX>
        <locationY>1118</locationY>
        <assignmentItems>
            <assignToReference>currTSECheckOut.EndTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetEndTimeForCheckOutTSE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns the end time of the timesheet entry with subject Onsite to the interview start time</description>
        <name>AssignEndTimeToTSEOnsite</name>
        <label>AssignEndTimeToTSEOnsite</label>
        <locationX>886</locationX>
        <locationY>998</locationY>
        <assignmentItems>
            <assignToReference>currTSEOnsite.EndTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SetEndTimeForOnsiteTSE</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>picklistStatusAccepted</name>
        <choiceText>Accepted</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Accepted</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusCheckOut</name>
        <choiceText>Check Out</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Check Out</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusCompleted</name>
        <choiceText>Completed</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Completed</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusFollowUpRequired</name>
        <choiceText>Follow Up Required</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Follow Up Required</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusIncompleted</name>
        <choiceText>Incompleted</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Incompleted</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusOnsite</name>
        <choiceText>Onsite</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Onsite</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusPaused</name>
        <choiceText>Paused</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Paused</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusTravel</name>
        <choiceText>Travel</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Travel</stringValue>
        </value>
    </choices>
    <decisions>
        <description>Checks if a timesheet entry with subject Onsite and empty end time exists.</description>
        <name>DoesOpenTSECheckOutExist</name>
        <label>DoesOpenTSECheckOutExist</label>
        <locationX>1502</locationX>
        <locationY>998</locationY>
        <defaultConnectorLabel>OpenTSEOnsiteDoesNOTExist</defaultConnectorLabel>
        <rules>
            <name>OpenTSECheckOutExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currTSECheckOut.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignEndTimeToTSECheckOut</targetReference>
            </connector>
            <label>OpenTSECheckOutExists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if a timesheet entry with subject Onsite and empty end time exists.</description>
        <name>DoesOpenTSEOnsiteExist</name>
        <label>DoesOpenTSEOnsiteExist</label>
        <locationX>1040</locationX>
        <locationY>878</locationY>
        <defaultConnectorLabel>OpenTSEOnsiteDoesNOTExist</defaultConnectorLabel>
        <rules>
            <name>OpenTSEOnsiteExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currTSEOnsite.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignEndTimeToTSEOnsite</targetReference>
            </connector>
            <label>OpenTSEOnsiteExists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifies if a travel time sheet entry with emtpy end time exists. If yes, set endtime to now. If not just create the TSE for Onsite.</description>
        <name>DoesOpenTSETravelExist</name>
        <label>DoesOpenTSETravelExist</label>
        <locationX>446</locationX>
        <locationY>758</locationY>
        <defaultConnector>
            <targetReference>CreateTSEOnsiteStart</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>OpenTSETravelDoesNOTExist</defaultConnectorLabel>
        <rules>
            <name>OpenTSETravelExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currTSETravel.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignEndtimeToTravelTSE</targetReference>
            </connector>
            <label>OpenTSETravelExists</label>
        </rules>
    </decisions>
    <decisions>
        <description>If Status is checkout a new follow up timesheet entry needs to be created and later closed when a final status is reached. In statuses Follow Up Required or Paused this is not necessary as those are final statuses.</description>
        <name>IsStatusCheckout</name>
        <label>IsStatusCheckout</label>
        <locationX>886</locationX>
        <locationY>1238</locationY>
        <defaultConnectorLabel>StatusIsNotCheckout</defaultConnectorLabel>
        <rules>
            <name>StatusIsCheckout</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusCheckOut</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateTSECheckOutStart_0</targetReference>
            </connector>
            <label>StatusIsCheckout</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if status is complete</description>
        <name>IsStatusComplete</name>
        <label>IsStatusComplete</label>
        <locationX>1656</locationX>
        <locationY>758</locationY>
        <defaultConnectorLabel>StatusIsNotComplete</defaultConnectorLabel>
        <rules>
            <name>StatusIsComplete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusCompleted</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetExistingTSECheckOutRecord</targetReference>
            </connector>
            <label>StatusIsComplete</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsStatusIsCheckOutorPaused</name>
        <label>IsStatusIsCheckOutorPaused</label>
        <locationX>1348</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>IsStatusComplete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotCheckOutorPaused</defaultConnectorLabel>
        <rules>
            <name>StatusIsCheckOutorPaused</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusCheckOut</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusPaused</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusFollowUpRequired</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetExistingTSEOnsiteRecord</targetReference>
            </connector>
            <label>StatusIsCheckOutorPaused</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if status is Onsite</description>
        <name>IsStatusOnsite</name>
        <label>IsStatusOnsite</label>
        <locationX>897</locationX>
        <locationY>518</locationY>
        <defaultConnector>
            <targetReference>IsStatusIsCheckOutorPaused</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotOnsite</defaultConnectorLabel>
        <rules>
            <name>StatusIsOnsite</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusOnsite</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetExistingTravelStartRecord</targetReference>
            </connector>
            <label>StatusIsOnsite</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if status = Travel</description>
        <name>IsStatusTravel</name>
        <label>IsStatusTravel</label>
        <locationX>473</locationX>
        <locationY>398</locationY>
        <defaultConnector>
            <targetReference>IsStatusOnsite</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotTravel</defaultConnectorLabel>
        <rules>
            <name>StatusIsTravel</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusTravel</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetWOInfo</targetReference>
            </connector>
            <label>StatusIsTravel</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if at least one timesheet exists</description>
        <name>IsTimesheetExists</name>
        <label>IsTimesheetExists</label>
        <locationX>1229</locationX>
        <locationY>278</locationY>
        <defaultConnector>
            <targetReference>NoTimesheet</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>TSDoesNotExist</defaultConnectorLabel>
        <rules>
            <name>TSExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currTSRecord.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsStatusTravel</targetReference>
            </connector>
            <label>TSExists</label>
        </rules>
    </decisions>
    <description>Timesheet Standard Flow with new Status names (added logic for US 2554)</description>
    <interviewLabel>GDMFSL TS Standard {!$Flow.CurrentDateTime}</interviewLabel>
    <label>GDMFSL TS Standard</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>FieldServiceMobile</processType>
    <recordCreates>
        <description>Creates a new timesheet entry for the start of the Onsite activity.</description>
        <name>CreateTSECheckOutStart_0</name>
        <label>CreateTSECheckOutStart</label>
        <locationX>754</locationX>
        <locationY>1358</locationY>
        <inputAssignments>
            <field>GDMFSL_Service_Appointment__c</field>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StartTime</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>{!currSA.AppointmentNumber}-Check Out</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TimeSheetId</field>
            <value>
                <elementReference>currTSRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkOrderId</field>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </inputAssignments>
        <object>TimeSheetEntry</object>
    </recordCreates>
    <recordCreates>
        <description>Creates a new timesheet entry for the start of the Onsite activity.</description>
        <name>CreateTSEOnsiteStart</name>
        <label>CreateTSEOnsiteStart</label>
        <locationX>446</locationX>
        <locationY>1214</locationY>
        <inputAssignments>
            <field>GDMFSL_Service_Appointment__c</field>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StartTime</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>{!currSA.AppointmentNumber}-Onsite</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TimeSheetId</field>
            <value>
                <elementReference>currTSRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkOrderId</field>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </inputAssignments>
        <object>TimeSheetEntry</object>
    </recordCreates>
    <recordCreates>
        <description>This will create an Entry for the Start of the Travel for the current Assigned Resource</description>
        <name>CreateTSETravelStart</name>
        <label>CreateTSETravelStart</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <inputAssignments>
            <field>GDMFSL_Chargeable__c</field>
            <value>
                <elementReference>currWORecord.GDMFSL_Chargeable__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>GDMFSL_Service_Appointment__c</field>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StartTime</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>{!currSA.AppointmentNumber}-Travel</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TimeSheetId</field>
            <value>
                <elementReference>currTSRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkOrderId</field>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </inputAssignments>
        <object>TimeSheetEntry</object>
    </recordCreates>
    <recordLookups>
        <description>This will check and retrieve any Travel record that exists to close it.</description>
        <name>GetExistingTravelStartRecord</name>
        <label>GetExistingTravelStartRecord</label>
        <locationX>446</locationX>
        <locationY>638</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesOpenTSETravelExist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Travel</stringValue>
            </value>
        </filters>
        <filters>
            <field>GDMFSL_Service_Appointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndTime</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>TimeSheetEntry</object>
        <outputReference>currTSETravel</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>EndTime</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <description>Retrieves an existing timesheet entry with Onsite subject and empty End time</description>
        <name>GetExistingTSECheckOutRecord</name>
        <label>GetExistingTSECheckOutRecord</label>
        <locationX>1502</locationX>
        <locationY>878</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesOpenTSECheckOutExist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Check Out</stringValue>
            </value>
        </filters>
        <filters>
            <field>EndTime</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>GDMFSL_Service_Appointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </filters>
        <object>TimeSheetEntry</object>
        <outputReference>currTSECheckOut</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>EndTime</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <description>Retrieves an existing timesheet entry with Onsite subject and empty End time</description>
        <name>GetExistingTSEOnsiteRecord</name>
        <label>GetExistingTSEOnsiteRecord</label>
        <locationX>1040</locationX>
        <locationY>758</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesOpenTSEOnsiteExist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subject</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Onsite</stringValue>
            </value>
        </filters>
        <filters>
            <field>EndTime</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>GDMFSL_Service_Appointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </filters>
        <object>TimeSheetEntry</object>
        <outputReference>currTSEOnsite</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>EndTime</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>GetTSRecords</name>
        <label>GetTSRecords</label>
        <locationX>1229</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsTimesheetExists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceResourceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ServiceResourceId</elementReference>
            </value>
        </filters>
        <filters>
            <field>StartDate</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <object>TimeSheet</object>
        <outputReference>currTSRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordLookups>
        <description>This will retrieve information from the relate Work Order</description>
        <name>GetWOInfo</name>
        <label>GetWOInfo</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CreateTSETravelStart</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
        <outputReference>currWORecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>GDMFSL_Chargeable__c</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordUpdates>
        <description>Updates the Onsite timesheet entry with an end time</description>
        <name>SetEndTimeForCheckOutTSE</name>
        <label>SetEndTimeForCheckOutTSE</label>
        <locationX>1370</locationX>
        <locationY>1238</locationY>
        <inputReference>currTSECheckOut</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Updates the Onsite timesheet entry with an end time</description>
        <name>SetEndTimeForOnsiteTSE</name>
        <label>SetEndTimeForOnsiteTSE</label>
        <locationX>886</locationX>
        <locationY>1118</locationY>
        <connector>
            <targetReference>IsStatusCheckout</targetReference>
        </connector>
        <inputReference>currTSEOnsite</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Sets the end time of the travel TSE to the interview start time</description>
        <name>SetEndTimeForTravelTSE</name>
        <label>SetEndTimeForTravelTSE</label>
        <locationX>314</locationX>
        <locationY>998</locationY>
        <connector>
            <targetReference>CreateTSEOnsiteStart</targetReference>
        </connector>
        <inputReference>currTSETravel</inputReference>
    </recordUpdates>
    <screens>
        <name>NoTimesheet</name>
        <label>NoTimesheet</label>
        <locationX>1986</locationX>
        <locationY>398</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DisplayNoTimesheet</name>
            <fieldText>&lt;p&gt;We couldn´t find a Timesheet for you. Please synchronize your mobile device with the server. Contact your Support Contact if this does not resolve the problem.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>1103</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetTSRecords</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>This is a sub flow to handle Timesheet Entry generation. This variable will store the current SA record provided by the calling flow.</description>
        <name>currSA</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
    <variables>
        <description>This variable holds the info about the Assigned Resource of the SA</description>
        <name>currSAAssignedResource</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>AssignedResource</objectType>
    </variables>
    <variables>
        <name>currTSECheckOut</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>TimeSheetEntry</objectType>
    </variables>
    <variables>
        <description>Holds the retrieved timesheet entry with subject Onsite and open end time</description>
        <name>currTSEOnsite</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>TimeSheetEntry</objectType>
    </variables>
    <variables>
        <description>Fetches an open travel record.</description>
        <name>currTSETravel</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>TimeSheetEntry</objectType>
    </variables>
    <variables>
        <description>This variable holds the current TS info. Note: If there are multiple TS we are taking the one that was the earliest created one (sorted by Ascend CreatedDate.</description>
        <name>currTSRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>TimeSheet</objectType>
    </variables>
    <variables>
        <description>Hold the WO info</description>
        <name>currWORecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkOrder</objectType>
    </variables>
    <variables>
        <name>DebugAssignedResourceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>placeholder for the current SA record Id. Used for testing the flow. We would expect to get the full SA record in another variable later on.</description>
        <name>Id</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Used for tests with date properties being null for Pulsar and SFS App</description>
        <name>NULLDate</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ServiceResourceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>TSESubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>currSA.AppointmentNumber</elementReference>
        </value>
    </variables>
    <variables>
        <name>UserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
