<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_Alert</name>
        <label>Email Alert</label>
        <locationX>708</locationX>
        <locationY>626</locationY>
        <actionName>Case.HBS_New_Case_Received_for_US_South</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>IsNew</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_tp_Customer</name>
        <label>Send Email tp Customer</label>
        <locationX>1030</locationX>
        <locationY>172</locationY>
        <actionName>Case.HBS_New_Case_Received_for_US_South</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Origin</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>50.0</apiVersion>
    <decisions>
        <name>Check_for_New_Record</name>
        <label>Check for New Case Record</label>
        <locationX>612</locationX>
        <locationY>50</locationY>
        <defaultConnector>
            <targetReference>Origin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Updated Case Record</defaultConnectorLabel>
        <rules>
            <name>New_Case_Record</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Has_Email</targetReference>
            </connector>
            <label>New Case Record</label>
        </rules>
    </decisions>
    <decisions>
        <name>Customer_Support</name>
        <label>Customer Support?</label>
        <locationX>241</locationX>
        <locationY>627</locationY>
        <defaultConnector>
            <targetReference>IsNew</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesCS</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GDMFSL_HBS_META_Customer_Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Queue.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GDMFSL_HBS_US_South_Customer_Support</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Alert</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Look for Public Group ID associated with the Service Territory</description>
        <name>Does_Group_ID_Exist</name>
        <label>Does Group ID Exist?</label>
        <locationX>1153</locationX>
        <locationY>520</locationY>
        <defaultConnectorLabel>Group ID not found</defaultConnectorLabel>
        <rules>
            <name>Group_ID_found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGroupRecord.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateCaseShare</targetReference>
            </connector>
            <label>Group ID found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Has_Email</name>
        <label>Has Email?</label>
        <locationX>855</locationX>
        <locationY>93</locationY>
        <defaultConnector>
            <targetReference>Origin</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesEmailToCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SuppliedEmail</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue/>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_tp_Customer</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Service_Request_or_General_Inquiry_Rec_Type</name>
        <label>Is Service Request or General Inquiry Rec Type</label>
        <locationX>445</locationX>
        <locationY>131</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Service_Request_or_General_Inquiry_Record</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GDMFSL_Service_Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>GDMFSL_General_Inquiry</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_New_Record</targetReference>
            </connector>
            <label>Is Service Request or General Inquiry Rec Type</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsNew</name>
        <label>IsNew?</label>
        <locationX>703</locationX>
        <locationY>441</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Caseisnew</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.GDMFSL_Location__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>$Record.GDMFSL_Location__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetGroupRecord</targetReference>
            </connector>
            <label>Caseisnew</label>
        </rules>
        <rules>
            <name>Casenotnew</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.GDMFSL_Location__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.GDMFSL_Location__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.GDMFSL_Location__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.GDMFSL_Location__c</leftValueReference>
                <operator>NotEqualTo</operator>
            </conditions>
            <connector>
                <targetReference>GetGroupRecord</targetReference>
            </connector>
            <label>Casenotnew</label>
        </rules>
    </decisions>
    <decisions>
        <name>Origin</name>
        <label>Origin</label>
        <locationX>479</locationX>
        <locationY>377</locationY>
        <defaultConnector>
            <targetReference>IsNew</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other</defaultConnectorLabel>
        <rules>
            <name>Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Origin</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue</targetReference>
            </connector>
            <label>Email</label>
        </rules>
    </decisions>
    <description>Flow for After Insert or Update of Case records</description>
    <interviewLabel>Case | After Insert OR Update Triggers {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case | After Insert OR Update Triggers</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateCaseShare</name>
        <label>CreateCaseShare</label>
        <locationX>981</locationX>
        <locationY>519</locationY>
        <inputAssignments>
            <field>CaseAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CaseId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>GetGroupRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <object>CaseShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Queue</name>
        <label>Get Queue</label>
        <locationX>251</locationX>
        <locationY>496</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Customer_Support</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetGroupRecord</name>
        <label>GetGroupRecord</label>
        <locationX>1162</locationX>
        <locationY>382</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Group_ID_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.GDMFSL_Location__r.GDMFSL_Service_Territory__r.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>52</locationX>
        <locationY>126</locationY>
        <connector>
            <targetReference>Is_Service_Request_or_General_Inquiry_Rec_Type</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
