<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <assignments>
        <description>Assigns status Accept and Pinned = true to the actual SA record</description>
        <name>AssignAcceptStatusAndPinned</name>
        <label>AssignAcceptStatusAndPinned</label>
        <locationX>370</locationX>
        <locationY>1285</locationY>
        <assignmentItems>
            <assignToReference>currSA.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusAcceptReject</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateSAwithAccept</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set the Actual Response Time Field on the Related Work Order</description>
        <name>AssignActualResponseTime</name>
        <label>Assign Actual Response Time</label>
        <locationX>44</locationX>
        <locationY>1250</locationY>
        <assignmentItems>
            <assignToReference>relatedWO.GDMFSL_Actual_Response_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateActualResponseTime</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Calls a subflow that handles all Timesheet Entry generation</description>
        <name>AssignNonBreakFixStatusOnsite</name>
        <label>AssignNonBreakFixStatusOnsite</label>
        <locationX>1256</locationX>
        <locationY>1100</locationY>
        <assignmentItems>
            <assignToReference>currSA.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusTravelOnsite</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.ActualStartTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.SchedStartTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.SchedEndTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ScheduledEnd</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.GDMFSL_Remote_Work_Completed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Remote_Work_Completed</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateSA</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign the outcome from the Travel-Onsite Selection</description>
        <name>AssignNonBreakFixStatusTravel</name>
        <label>AssignNonBreakFixStatusTravel</label>
        <locationX>1064</locationX>
        <locationY>1341</locationY>
        <assignmentItems>
            <assignToReference>currSA.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusTravelOnsite</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.GDMFSL_ActualStartTravel__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.GDMFSL_Remote_Work_Completed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Remote_Work_Completed</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateSA</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Since Onsite is the only status to be selected and by default selected, we can directly assign the result here once the flow reaches this point. Also the actual start time will be set to NOW.</description>
        <name>AssignStatusOnsite</name>
        <label>AssignStatusOnsite</label>
        <locationX>1423</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>currSA.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusOnsite</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.ActualStartTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.SchedStartTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.SchedEndTime</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ScheduledEnd</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Dead_Man_Timer</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Since Travel is the only status to be selected and by default selected, we can directly assign the result here once the flow reaches this point.</description>
        <name>AssignStatusTravel</name>
        <label>AssignStatusTravel</label>
        <locationX>1164</locationX>
        <locationY>779</locationY>
        <assignmentItems>
            <assignToReference>currSA.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StatusTravel</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.GDMFSL_ActualStartTravel__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>currSA.GDMFSL_Remote_Work_Completed__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ChkRemote_Work_Completed</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateSA</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>choiceNo</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>No</stringValue>
        </value>
    </choices>
    <choices>
        <name>choiceYes</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Yes</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusAccept</name>
        <choiceText>Accepted</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Accepted</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusCheckOut</name>
        <choiceText>Check Out</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Check Out</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusCompleted</name>
        <choiceText>Completed</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Completed</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusFollowUpRequired</name>
        <choiceText>Follow Up Required</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Follow Up Required</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusIncomplete</name>
        <choiceText>Incompleted</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Incompleted</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusOnsite</name>
        <choiceText>Onsite</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Onsite</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusPaused</name>
        <choiceText>Paused</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Paused</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusReject</name>
        <choiceText>Rejected</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Rejected</stringValue>
        </value>
    </choices>
    <choices>
        <name>picklistStatusTravel</name>
        <choiceText>Travel</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Travel</stringValue>
        </value>
    </choices>
    <decisions>
        <description>This is verifying whether it was possible to find an existing record for the excluded resource on the required SA parent object or not.</description>
        <name>AssignedResourceAlreadyExistsAsExcludedResource</name>
        <label>AssignedResourceAlreadyExistsAsExcludedResource</label>
        <locationX>656</locationX>
        <locationY>1727</locationY>
        <defaultConnector>
            <targetReference>ExcludeEngineerFromParentWO</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>ExcludedResourceDoesNOTExist</defaultConnectorLabel>
        <rules>
            <name>ExcludedResourceExists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ExistentExcludedResourcePreferenceForAssignedResource</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Changed_to_Onsite</targetReference>
            </connector>
            <label>ExcludedResourceExists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Changed_to_Onsite</name>
        <label>Changed to Onsite?</label>
        <locationX>1692</locationX>
        <locationY>1460</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YesOnSite</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Onsite</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Safety_Check</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckIfHSEFound</name>
        <label>CheckIfHSEFound</label>
        <locationX>1720</locationX>
        <locationY>697</locationY>
        <defaultConnector>
            <targetReference>HSEError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>HSEFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarHSEItem</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Wrap_Up_Work</targetReference>
            </connector>
            <label>HSEFound</label>
        </rules>
        <rules>
            <name>HSENotFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarHSEItem</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>HSEError</targetReference>
            </connector>
            <label>HSENotFound</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check to see if the related work order actual response time is null</description>
        <name>IsActualResponseTimeNull</name>
        <label>Is Actual Response Time Null</label>
        <locationX>200</locationX>
        <locationY>987</locationY>
        <defaultConnector>
            <targetReference>AssignAcceptStatusAndPinned</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Actual Response Time Not Null</defaultConnectorLabel>
        <rules>
            <name>ActualResponseTimeNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>relatedWO.GDMFSL_Actual_Response_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignActualResponseTime</targetReference>
            </connector>
            <label>Actual Response Time Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsSAComplete</name>
        <label>IsSAComplete</label>
        <locationX>1872</locationX>
        <locationY>429</locationY>
        <defaultConnectorLabel>IsNotFollowedUp</defaultConnectorLabel>
        <rules>
            <name>IsValid</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Follow Up Required</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Check Out</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Complete_Work</targetReference>
            </connector>
            <label>IsValid</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsSATypeBreakFix</name>
        <label>IsSATypeBreakFix</label>
        <locationX>643</locationX>
        <locationY>780</locationY>
        <defaultConnector>
            <targetReference>ShowStatusTravelOnsite</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>IsNotTypeBreakfix</defaultConnectorLabel>
        <rules>
            <name>IsTypeBreakFix</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>currSAWorkType.GDMFSL_WorkType_Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>BF</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ShowStatusAcceptReject</targetReference>
            </connector>
            <label>IsTypeBreakFix</label>
        </rules>
    </decisions>
    <decisions>
        <description>If user selected Accept status.</description>
        <name>IsSelectionAccept</name>
        <label>IsSelectionAccept</label>
        <locationX>652</locationX>
        <locationY>1118</locationY>
        <defaultConnector>
            <targetReference>IsActualResponseTimeNull</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>SAStatusIsAccept</defaultConnectorLabel>
        <rules>
            <name>SAStatusNOTAccept</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>StatusAcceptReject</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusAccept</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SelectRejectionReason</targetReference>
            </connector>
            <label>SAStatusNOTAccept</label>
        </rules>
    </decisions>
    <decisions>
        <description>Verifies if Travel has been selected.</description>
        <name>IsSelectionTravel</name>
        <label>IsSelectionTravel</label>
        <locationX>1057</locationX>
        <locationY>1054</locationY>
        <defaultConnector>
            <targetReference>AssignNonBreakFixStatusOnsite</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NonBreakfixIsNotTravel</defaultConnectorLabel>
        <rules>
            <name>NonBreakfixStatusIsTravel</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>StatusTravelOnsite</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>picklistStatusTravel</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNonBreakFixStatusTravel</targetReference>
            </connector>
            <label>NonBreakfixStatusIsTravel</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if status = Accept</description>
        <name>IsStatusAccept</name>
        <label>IsStatusAccept</label>
        <locationX>1131</locationX>
        <locationY>418</locationY>
        <defaultConnector>
            <targetReference>IsStatusTravel</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotAccept</defaultConnectorLabel>
        <rules>
            <name>StatusIsAccept</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Accepted</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ShowStatusTravel</targetReference>
            </connector>
            <label>StatusIsAccept</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsStatusDispatched</name>
        <label>IsStatusDispatched</label>
        <locationX>722</locationX>
        <locationY>419</locationY>
        <defaultConnector>
            <targetReference>IsStatusAccept</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>IsNotDispatched</defaultConnectorLabel>
        <rules>
            <name>StatusIsDispatched</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Dispatched</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IsSATypeBreakFix</targetReference>
            </connector>
            <label>StatusIsDispatched</label>
        </rules>
    </decisions>
    <decisions>
        <description>Is status Canceled, Completed, Incomplete</description>
        <name>IsStatusEndstatus</name>
        <label>IsStatusEndstatus</label>
        <locationX>428</locationX>
        <locationY>362</locationY>
        <defaultConnector>
            <targetReference>IsStatusReject</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>IsNotEndstatus</defaultConnectorLabel>
        <rules>
            <name>IsEndstatus</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Canceled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CannotChangeSAStatus</targetReference>
            </connector>
            <label>IsEndstatus</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if status = onsite</description>
        <name>IsStatusOnsite</name>
        <label>IsStatusOnsite</label>
        <locationX>1639</locationX>
        <locationY>429</locationY>
        <defaultConnector>
            <targetReference>IsSAComplete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotOnsite</defaultConnectorLabel>
        <rules>
            <name>StatusIsOnsite</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Onsite</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetHSERecord</targetReference>
            </connector>
            <label>StatusIsOnsite</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if Status = Reject</description>
        <name>IsStatusReject</name>
        <label>IsStatusReject</label>
        <locationX>427</locationX>
        <locationY>639</locationY>
        <defaultConnector>
            <targetReference>IsStatusDispatched</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotReject</defaultConnectorLabel>
        <rules>
            <name>StatusIsReject</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rejected</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CannotChangeSAStatus</targetReference>
            </connector>
            <label>StatusIsReject</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks if status = Travel</description>
        <name>IsStatusTravel</name>
        <label>IsStatusTravel</label>
        <locationX>1414</locationX>
        <locationY>434</locationY>
        <defaultConnector>
            <targetReference>IsStatusOnsite</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>StatusIsNotTravel</defaultConnectorLabel>
        <rules>
            <name>StatusIsTravel</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Travel</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>currSA.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Paused</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ShowStatusOnsite</targetReference>
            </connector>
            <label>StatusIsTravel</label>
        </rules>
    </decisions>
    <description>DTXFSL-8077/ 8568 - fix</description>
    <dynamicChoiceSets>
        <name>PLAcceptReject</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>StatusCode</picklistField>
        <picklistObject>ServiceAppointmentStatus</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>PLRejectionReasons</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>GDMFSL_Rejection_Reason__c</picklistField>
        <picklistObject>ServiceAppointment</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <name>ScheduledEnd</name>
        <dataType>DateTime</dataType>
        <expression>{!$Flow.CurrentDateTime} + ({!currSA.DurationInMinutes}/60/24)</expression>
    </formulas>
    <interviewLabel>ChangeStatusMobileFlow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>GDMFSL ChangeStatusMobileFlow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>FieldServiceMobile</processType>
    <recordCreates>
        <description>Note: Maybe we need to check first if such a record exists, because otherwise we might run into an error when we try to add the same resource again to the excluded resources. The creation step would fail. In theory it could be possible for a Dispatcher to schedule the task as an exception again to a excluded resource.</description>
        <name>ExcludeEngineerFromParentWO</name>
        <label>ExcludeEngineerFromParentWO</label>
        <locationX>664</locationX>
        <locationY>1946</locationY>
        <connector>
            <targetReference>Changed_to_Onsite</targetReference>
        </connector>
        <inputAssignments>
            <field>PreferenceType</field>
            <value>
                <stringValue>Excluded</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RelatedRecordId</field>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceResourceId</field>
            <value>
                <elementReference>ServiceResourceId</elementReference>
            </value>
        </inputAssignments>
        <object>ResourcePreference</object>
    </recordCreates>
    <recordLookups>
        <name>Get_current_SA_Info</name>
        <label>Get current SA Info</label>
        <locationX>176</locationX>
        <locationY>181</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_ServiceResourceId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Id</elementReference>
            </value>
        </filters>
        <object>ServiceAppointment</object>
        <outputReference>currSA</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>ParentRecordId</queriedFields>
        <queriedFields>WorkTypeId</queriedFields>
        <queriedFields>FSL__Pinned__c</queriedFields>
        <queriedFields>AppointmentNumber</queriedFields>
        <queriedFields>GDMFSL_ActualStartTravel__c</queriedFields>
        <queriedFields>StatusCategory</queriedFields>
        <queriedFields>ActualStartTime</queriedFields>
        <queriedFields>GDMFSL_Travel_Pay_Type__c</queriedFields>
        <queriedFields>ActualEndTime</queriedFields>
        <queriedFields>GDMFSL_Resolution_Reason__c</queriedFields>
        <queriedFields>GDMFSL_Resolution_Notes__c</queriedFields>
        <queriedFields>DueDate</queriedFields>
        <queriedFields>GDMFSL_Follow_Up_Notes__c</queriedFields>
        <queriedFields>GDMFSL_Location__c</queriedFields>
        <queriedFields>ServiceTerritoryId</queriedFields>
        <queriedFields>GDMFSL_Vertical__c</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>Subject</queriedFields>
        <queriedFields>GDMFSL_Actual_Check_Out__c</queriedFields>
        <queriedFields>GDMFSL_Regular_Travel_in_minutes__c</queriedFields>
        <queriedFields>GDMFSL_Regular_Labor_in_minutes__c</queriedFields>
        <queriedFields>GDMFSL_OT_Labor_in_minutes__c</queriedFields>
        <queriedFields>GDMFSL_OT_Travel_in_minutes__c</queriedFields>
        <queriedFields>GDMFSL_PT_Labor_in_minutes__c</queriedFields>
        <queriedFields>GDMFSL_PT_Travel_in_minutes__c</queriedFields>
        <queriedFields>GDMFSL_StartTravelDateTimeToDate__c</queriedFields>
        <queriedFields>GDMFSL_IsFollowUp__c</queriedFields>
        <queriedFields>GDMFSL_Incomplete_Reason__c</queriedFields>
        <queriedFields>GDMFSL_Incomplete_Reason_Notes__c</queriedFields>
        <queriedFields>Description</queriedFields>
        <queriedFields>GDMFSL_Dead_Man_Switch_Timer__c</queriedFields>
        <queriedFields>GDMFSL_Last_Dead_Man_Switch__c</queriedFields>
        <queriedFields>DurationInMinutes</queriedFields>
        <queriedFields>GDMFSL_Distance__c</queriedFields>
        <queriedFields>GDMFSL_Distance_UOM__c</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>Get_ServiceResourceId</name>
        <label>Get ServiceResourceId</label>
        <locationX>308</locationX>
        <locationY>180</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetRelatedWorkOrder</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RelatedRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>ServiceResource</object>
        <outputAssignments>
            <assignToReference>ServiceResourceId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetCurrentWorkType</name>
        <label>Get Current Work Type</label>
        <locationX>615</locationX>
        <locationY>182</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsStatusEndstatus</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.WorkTypeId</elementReference>
            </value>
        </filters>
        <object>WorkType</object>
        <outputReference>currSAWorkType</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>GDMFSL_WorkType_Category__c</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>GDMFSL_Discipline__c</queriedFields>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>GetHSERecord</name>
        <label>GetHSERecord</label>
        <locationX>1657</locationX>
        <locationY>582</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckIfHSEFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Service_Appointment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.Id</elementReference>
            </value>
        </filters>
        <object>GDMFSL_HSE_Check__c</object>
        <outputReference>VarHSEItem</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>GetRelatedWorkOrder</name>
        <label>Get Related Work Order</label>
        <locationX>464</locationX>
        <locationY>180</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetCurrentWorkType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </filters>
        <object>WorkOrder</object>
        <outputReference>relatedWO</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>GDMFSL_Response_Time__c</queriedFields>
        <queriedFields>GDMFSL_Actual_Response_Time__c</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>GDMFSL_Resolution_Code__c</queriedFields>
        <queriedFields>GDMFSL_Resolution_Notes__c</queriedFields>
        <queriedFields>LocationId</queriedFields>
        <queriedFields>GDMFSL_Incomplete_Reason__c</queriedFields>
        <queriedFields>GDMFSL_Incomplete_Reason_Notes__c</queriedFields>
        <queriedFields>GDMFSL_Travel_Time_Chargeable__c</queriedFields>
        <queriedFields>GDMFSL_Labor_Time_Chargeable__c</queriedFields>
        <queriedFields>WorkOrderNumber</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>This step verifies whether there is already a Resource Preference object for this engineer and parent WO object or not. Any found ID will be stored in a variable. Only if the variable is NULL a new resource preference record will be created as otherwise the flow step will fail and raise an error.</description>
        <name>VerifyIfAssignedEngineerIsAlreadyAddedAsExcludedToWO</name>
        <label>VerifyIfAssignedEngineerIsAlreadyAddedAsExcludedToWO</label>
        <locationX>666</locationX>
        <locationY>1586</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignedResourceAlreadyExistsAsExcludedResource</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RelatedRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSA.ParentRecordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>ServiceResourceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>currSAAssignedResource.ServiceResourceId</elementReference>
            </value>
        </filters>
        <object>ResourcePreference</object>
        <outputAssignments>
            <assignToReference>ExistentExcludedResourcePreferenceForAssignedResource</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>Id</sortField>
        <sortOrder>Asc</sortOrder>
    </recordLookups>
    <recordUpdates>
        <description>Set SA Status to the user selected value of the screen component. This should be in this case Reject.</description>
        <name>SetSAStatusReject</name>
        <label>SetSAStatusReject</label>
        <locationX>889</locationX>
        <locationY>1586</locationY>
        <connector>
            <targetReference>VerifyIfAssignedEngineerIsAlreadyAddedAsExcludedToWO</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>GDMFSL_Rejection_Reason__c</field>
            <value>
                <elementReference>RejectionReasons</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>StatusAcceptReject</elementReference>
            </value>
        </inputAssignments>
        <object>ServiceAppointment</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateActualResponseTime</name>
        <label>Update Actual Response Time</label>
        <locationX>147</locationX>
        <locationY>1438</locationY>
        <connector>
            <targetReference>AssignAcceptStatusAndPinned</targetReference>
        </connector>
        <inputReference>relatedWO</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>This will update the SA record with all changes assigned to it.</description>
        <name>UpdateSA</name>
        <label>UpdateSA</label>
        <locationX>1417</locationX>
        <locationY>1186</locationY>
        <connector>
            <targetReference>Changed_to_Onsite</targetReference>
        </connector>
        <inputReference>currSA</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateSAwithAccept</name>
        <label>UpdateSAwithAccept</label>
        <locationX>435</locationX>
        <locationY>1442</locationY>
        <connector>
            <targetReference>Changed_to_Onsite</targetReference>
        </connector>
        <inputReference>currSA</inputReference>
    </recordUpdates>
    <screens>
        <name>CannotChangeSAStatus</name>
        <label>CannotChangeSAStatus</label>
        <locationX>43</locationX>
        <locationY>476</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>DisplayCannotDisplaySAStatus</name>
            <fieldText>&lt;p&gt;You cannot change the Service Appointment status.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>HSEError</name>
        <label>HSEError</label>
        <locationX>1616</locationX>
        <locationY>895</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Safety_Check</targetReference>
        </connector>
        <fields>
            <name>Error_Display</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 10px; font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Roboto, Oxygen, Ubuntu, &amp;quot;Fira Sans&amp;quot;, &amp;quot;Droid Sans&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, sans-serif; color: rgb(23, 43, 77);&quot;&gt;A Safety Check must be done before you can &apos;check out&apos; and finish flow.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SelectRejectionReason</name>
        <label>ScreenSelectRejectionReason</label>
        <locationX>662</locationX>
        <locationY>1270</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetSAStatusReject</targetReference>
        </connector>
        <fields>
            <name>RejectionReasons</name>
            <choiceReferences>PLRejectionReasons</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Rejection Reasons</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ShowStatusAcceptReject</name>
        <label>ShowStatusAcceptReject</label>
        <locationX>660</locationX>
        <locationY>969</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>IsSelectionAccept</targetReference>
        </connector>
        <fields>
            <name>StatusAcceptReject</name>
            <choiceReferences>picklistStatusAccept</choiceReferences>
            <choiceReferences>picklistStatusReject</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Change status to:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>If Status = Travel, show status Onsite</description>
        <name>ShowStatusOnsite</name>
        <label>ShowStatusOnsite</label>
        <locationX>1422</locationX>
        <locationY>630</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>AssignStatusOnsite</targetReference>
        </connector>
        <fields>
            <name>StatusOnsite</name>
            <choiceReferences>picklistStatusOnsite</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>picklistStatusOnsite</defaultSelectedChoiceReference>
            <fieldText>Change status to:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>If status is Accept, show as next option Travel.</description>
        <name>ShowStatusTravel</name>
        <label>ShowStatusTravel</label>
        <locationX>1164</locationX>
        <locationY>626</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>AssignStatusTravel</targetReference>
        </connector>
        <fields>
            <name>StatusTravel</name>
            <choiceReferences>picklistStatusTravel</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>picklistStatusTravel</defaultSelectedChoiceReference>
            <fieldText>Change status to:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>ChkRemote_Work_Completed</name>
            <dataType>Boolean</dataType>
            <fieldText>Work being completed remotely</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>ShowStatusTravelOnsite</name>
        <label>ShowStatusTravelOnsite</label>
        <locationX>902</locationX>
        <locationY>776</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>IsSelectionTravel</targetReference>
        </connector>
        <fields>
            <name>StatusTravelOnsite</name>
            <choiceReferences>picklistStatusTravel</choiceReferences>
            <choiceReferences>picklistStatusOnsite</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Change status to:</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Remote_Work_Completed</name>
            <dataType>Boolean</dataType>
            <fieldText>Work being completed remotely</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_current_SA_Info</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Complete_Work</name>
        <label>Complete Work</label>
        <locationX>1882</locationX>
        <locationY>691</locationY>
        <flowName>GDMFSL_Complete_Work</flowName>
        <inputAssignments>
            <name>currSA</name>
            <value>
                <elementReference>currSA</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ServiceResourceId</name>
            <value>
                <elementReference>ServiceResourceId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>UserId</name>
            <value>
                <elementReference>UserId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Safety_Check</name>
        <label>Safety Check</label>
        <locationX>1698</locationX>
        <locationY>1156</locationY>
        <flowName>GDMFSL_Mobile_Safety_Check</flowName>
        <inputAssignments>
            <name>Id</name>
            <value>
                <elementReference>Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Set_Dead_Man_Timer</name>
        <label>Set Dead Man Timer</label>
        <locationX>1424</locationX>
        <locationY>935</locationY>
        <connector>
            <targetReference>UpdateSA</targetReference>
        </connector>
        <flowName>GSMFSL_Set_Dead_Man_Timer</flowName>
        <inputAssignments>
            <name>Dead_Man_Default_Timer</name>
            <value>
                <elementReference>currSA.GDMFSL_Dead_Man_Switch_Timer__c</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>currSA.GDMFSL_Dead_Man_Switch_Timer__c</assignToReference>
            <name>Dead_Man_Timer</name>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>currSA.GDMFSL_Last_Dead_Man_Switch__c</assignToReference>
            <name>Dead_Man_Timer_Last_Checkin</name>
        </outputAssignments>
    </subflows>
    <subflows>
        <name>Wrap_Up_Work</name>
        <label>Wrap Up Work</label>
        <locationX>1765</locationX>
        <locationY>919</locationY>
        <flowName>GDMFSL_Wrap_Up</flowName>
        <inputAssignments>
            <name>currentSAWorkType</name>
            <value>
                <elementReference>currSAWorkType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>currSA</name>
            <value>
                <elementReference>currSA</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Id</name>
            <value>
                <elementReference>Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>relatedWO</name>
            <value>
                <elementReference>relatedWO</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>ServiceResourceId</name>
            <value>
                <elementReference>ServiceResourceId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>Stores the current Service Appointment fields</description>
        <name>currSA</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ServiceAppointment</objectType>
    </variables>
    <variables>
        <name>currSAAssignedResource</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AssignedResource</objectType>
    </variables>
    <variables>
        <name>currSAWorkType</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkType</objectType>
    </variables>
    <variables>
        <description>This variable stores the Resource Preference record ID in case there exists already a record for the assigned resource and the given SA parent object ID as excluded resource.</description>
        <name>ExistentExcludedResourcePreferenceForAssignedResource</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Id</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>relatedWO</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>WorkOrder</objectType>
    </variables>
    <variables>
        <name>SelectedChoiceAcceptReject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ServiceResourceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarHSEItem</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GDMFSL_HSE_Check__c</objectType>
    </variables>
</Flow>
