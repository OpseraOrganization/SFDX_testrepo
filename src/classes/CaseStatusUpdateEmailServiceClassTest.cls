@IsTest
public class CaseStatusUpdateEmailServiceClassTest {
    //For CSR action and case is not closed
    static testMethod void casemethod1() {
        Messaging.InboundEmail email = new Messaging.InboundEmail() ;
        Messaging.InboundEnvelope env    = new Messaging.InboundEnvelope();
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        
        test.startTest();
        Case cs2 = new Case();
        cs2.Origin = 'Email';
        cs2.Status = 'Open';                
        cs2.ContactId = conlist[0].Id;
        cs2.AccountID = acclist[0].id;
        cs2.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Orders').getRecordTypeId();
        cs2.Customer_Type__c = 'MSP';
        cs2.Part_Status__c = 'Outright';
        cs2.Customer_PO_RO_WONumber__c = '352312345';
        cs2.Sales_Order_Number__c = '21100463';
        cs2.Part_Number_Needed__c = 'Test';
        cs2.Quote_Number__c = '23648623';
        cs2.Proposed_Supplier__c = 'Test1';
        cs2.Price__c = '123';
        cs2.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs2.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs2.Part_Number__c = 'Test';
        cs2.Repair_Notification_Number__c = '76547654';
        cs2.Subject = 'Test Cases';
        cs2.Product_Serial_Number__c = 'testSN';
        cs2.Emailbox_Origin__c='Email';
        cs2.resolution__c='test';    
        cs2.External_Ref__c = 'EXPID12345';
        c.add(cs2);   
        insert c;
        
        // Test with the subject that matches the unsubscribe statement.
        email.subject = '[https://ease.honeywell.com] - Export Request :EXPID12345';
        email.plainTextBody = 'Status : Additional Information Request';
        email.fromAddress = 'swathi.nagaraj2@honeywell.com';
        email.toAddresses = new List<String>{'easecsr@honeywell.com'};
            email.fromName = 'Testing Case';
        env.fromAddress = 'swathi.nagaraj2@honeywell.com';
        CaseStatusUpdateEmailServiceClass obj= new CaseStatusUpdateEmailServiceClass();
        obj.handleInboundEmail(email, env );
        test.stopTest();
    }
    //For no CSR action
    static testMethod void casemethod3() {
        Messaging.InboundEmail email = new Messaging.InboundEmail() ;
        Messaging.InboundEnvelope env    = new Messaging.InboundEnvelope();
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        
        Case cs2 = new Case();
        cs2.Origin = 'Email-ACTinternal';
        cs2.Status = 'Open';                
        cs2.ContactId = conlist[0].Id;
        cs2.AccountID = acclist[0].id;
        cs2.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Internal Escalations').getRecordTypeId();
        cs2.Customer_Type__c = 'MSP';
        cs2.Part_Status__c = 'Outright';
        cs2.Customer_PO_RO_WONumber__c = '352312345';
        cs2.Sales_Order_Number__c = '21100463';
        cs2.Part_Number_Needed__c = 'Test';
        cs2.Quote_Number__c = '23648623';
        cs2.Proposed_Supplier__c = 'Test1';
        cs2.Price__c = '123';
        cs2.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs2.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs2.Part_Number__c = 'Test';
        cs2.Repair_Notification_Number__c = '76547654';
        cs2.Subject = 'Test Cases';
        cs2.Product_Serial_Number__c = 'testSN';
        cs2.Emailbox_Origin__c='Email';
        cs2.resolution__c='test';    
        cs2.External_Ref__c = 'EXPID12345';
        cs2.Export_Compliance_Content_ITAR_EAR__c = 'Yes';
        c.add(cs2);   
        insert c;
        
        test.startTest();
        
        // Test with the subject that matches the unsubscribe statement.
        email.subject = '[https://ease.honeywell.com] - Export Request :EXPID12345';
        email.htmlBody = 'Status : Pending Export Review';
        email.plainTextBody = '';
        email.fromAddress = 'swathi.nagaraj2@honeywell.com';
        email.toAddresses = new List<String>{'easecsr@honeywell.com'};
            email.fromName = 'Testing Case';
        env.fromAddress = 'swathi.nagaraj2@honeywell.com';
        CaseStatusUpdateEmailServiceClass obj= new CaseStatusUpdateEmailServiceClass();
        obj.handleInboundEmail(email, env );
        test.stopTest();
    }
    //For CSR action and case is closed
    static testMethod void casemethod4() {
        Messaging.InboundEmail email = new Messaging.InboundEmail() ;
        Messaging.InboundEnvelope env    = new Messaging.InboundEnvelope();
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        
        Case cs2 = new Case();
        cs2.Origin = 'Email-ACTinternal';
        cs2.Status = 'Open';   
        cs2.Type = 'WEB Portal Registration';
        cs2.ContactId = conlist[0].Id;
        cs2.AccountID = acclist[0].id;
        cs2.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Orders').getRecordTypeId();
        cs2.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs2.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs2.Subject = 'HONEYWELL FLIGHT TRACKING REQUESTS';
        cs2.Emailbox_Origin__c='Email-ACTinternal';
        cs2.resolution__c='test';    
        cs2.External_Ref__c = 'EXPID12345';
        cs2.Export_Compliance_Content_ITAR_EAR__c = 'No';
        cs2.Government_Compliance_SM_M_Content__c = 'No';
        c.add(cs2);   
        insert c;
        
        cs2.status = 'Closed';
        cs2.Type_of_Request__c = 'Duplicate Request';
        cs2.Resolution__c = 'Case testing';
        Update cs2;
        
        test.startTest();
        
        // Test with the subject that matches the unsubscribe statement.
        email.subject = '[https://ease.honeywell.com] - Export Request :EXPID12345';
        email.htmlBody = 'Status : Additional Information Request';
        email.plainTextBody = 'Status : Additional Information Request';
        email.fromAddress = 'swathi.nagaraj2@honeywell.com';
        email.toAddresses = new List<String>{'easecsr@honeywell.com'};
            email.fromName = 'Testing Case';
        env.fromAddress = 'swathi.nagaraj2@honeywell.com';
        CaseStatusUpdateEmailServiceClass obj= new CaseStatusUpdateEmailServiceClass();
        obj.handleInboundEmail(email, env );
        test.stopTest();
    }
    //For CSR action and case is not found with the passed EXPID
    static testMethod void casemethod5() {
        Messaging.InboundEmail email = new Messaging.InboundEmail() ;
        Messaging.InboundEnvelope env    = new Messaging.InboundEnvelope();
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        
        Case cs2 = new Case();
        cs2.Origin = 'Email-ACTinternal';
        cs2.Status = 'Open';   
        cs2.Type = 'WEB Portal Registration';
        cs2.ContactId = conlist[0].Id;
        cs2.AccountID = acclist[0].id;
        cs2.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Orders').getRecordTypeId();
        cs2.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs2.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs2.Subject = 'HONEYWELL FLIGHT TRACKING REQUESTS';
        cs2.Emailbox_Origin__c='Email-ACTinternal';
        cs2.resolution__c='test';    
        cs2.External_Ref__c = 'EXPID12345';
        cs2.Export_Compliance_Content_ITAR_EAR__c = 'No';
        cs2.Government_Compliance_SM_M_Content__c = 'No';
        c.add(cs2);   
        insert c;
        
        test.startTest();
        email.subject = '[https://ease.honeywell.com] - Export Request :EXPID123456';
        email.htmlBody = 'Status : Additional Information Request';
        email.plainTextBody = 'Status : Additional Information Request';
        email.fromAddress = 'swathi.nagaraj2@honeywell.com';
        email.toAddresses = new List<String>{'easecsr@honeywell.com'};
            email.fromName = 'Testing Case';
        env.fromAddress = 'swathi.nagaraj2@honeywell.com';
        CaseStatusUpdateEmailServiceClass obj= new CaseStatusUpdateEmailServiceClass();
        obj.handleInboundEmail(email, env );
        test.stopTest();
    }
    static testMethod void EMAfterinsertmethod1() {
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        
        Case cs2 = new Case();
        cs2.Origin = 'E2CP Test';
        cs2.Status = 'Open';   
        cs2.Type = 'WEB Portal Registration';
        cs2.ContactId = conlist[0].Id;
        cs2.AccountID = acclist[0].id;
        cs2.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('General').getRecordTypeId();
        cs2.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs2.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs2.Subject = 'HONEYWELL FLIGHT TRACKING REQUESTS';
        cs2.Description = 'THE BOEING COMMUNICATION SYSTEM';
        cs2.Emailbox_Origin__c='Email-ACTinternal';
        cs2.resolution__c='test';    
        cs2.Sub_Status__c = 'Credit Hold';
        cs2.External_Ref__c = 'EXPID12345';
        cs2.vn_name__c = conlist[0].Id;
        cs2.Reason_for_hold__c = 'Credit Card Payment';
        cs2.Export_Compliance_Content_ITAR_EAR__c = 'No';
        cs2.Government_Compliance_SM_M_Content__c = 'No';
        cs2.OwnerID = Label.aero_default_user_id;
        c.add(cs2);   
        insert c;
        List<EmailMessage> emsglst = new List<EmailMessage>();
        Test.startTest();
        EmailMessage CaseEmailMessage0 = new EmailMessage();
        CaseEmailMessage0.ToAddress =  'aerorCRC-EDI@HONEYWELL.COM';
        CaseEmailMessage0.CcAddress = 'test@test.com';
        CaseEmailMessage0.BccAddress = 'test@test.com';
        CaseEmailMessage0.FromAddress = 'AEXMAILER@AEROXCHANGE.COM';
        CaseEmailMessage0.FromName = 'Test';
        CaseEmailMessage0.Subject = 'ref:Aeroxchange Repair Error Message =- AEX_ServiceOrderQuotation';
        CaseEmailMessage0.status = '2';
        CaseEmailMessage0.HtmlBody = 'Testing';
        CaseEmailMessage0.Incoming= False;
        CaseEmailMessage0.TextBody = 'Testing';
        CaseEmailMessage0.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage0);
        EmailMessage CaseEmailMessage = new EmailMessage();
        CaseEmailMessage.ToAddress =  'aeror&ofastshop@honeywell.com';
        CaseEmailMessage.CcAddress = 'test@test.com';
        CaseEmailMessage.BccAddress = 'test@test.com';
        CaseEmailMessage.FromAddress = 'test@embraer.com';
        CaseEmailMessage.FromName = 'Test';
        CaseEmailMessage.Subject = 'ref:Testing';
        CaseEmailMessage.status = '0';
        CaseEmailMessage.HtmlBody = 'Testing';
        CaseEmailMessage.Incoming= True;
        CaseEmailMessage.TextBody = 'Testing';
        CaseEmailMessage.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage);
        EmailMessage CaseEmailMessage1 = new EmailMessage();
        CaseEmailMessage1.ToAddress =  'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage1.CcAddress = 'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage1.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage1.FromName = 'Test';
        CaseEmailMessage1.Subject = 'Testing';
        CaseEmailMessage1.status = '0';
        CaseEmailMessage1.HtmlBody = 'Testing';
        CaseEmailMessage1.Incoming= True;
        CaseEmailMessage1.TextBody = 'Testing';
        CaseEmailMessage1.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage1);
        EmailMessage CaseEmailMessag2 = new EmailMessage();
        CaseEmailMessag2.ToAddress =  'AEROROAPU@HONEYWELL.COM';
        CaseEmailMessag2.CcAddress = 'AEROROAPU@HONEYWELL.COM';
        CaseEmailMessag2.FromAddress = 'test@BOEING.COM';
        CaseEmailMessag2.FromName = 'Test';
        CaseEmailMessag2.Subject = 'Testing';
        CaseEmailMessag2.status = '0';
        CaseEmailMessag2.HtmlBody = 'Testing';
        CaseEmailMessag2.Incoming= True;
        CaseEmailMessag2.TextBody = 'Testing';
        CaseEmailMessag2.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessag2);
        EmailMessage CaseEmailMessage3 = new EmailMessage();
        CaseEmailMessage3.ToAddress =  'AEROROAVIONICSQA@HONEYWELL.COM';
        CaseEmailMessage3.CcAddress = 'AEROROAVIONICSQA@HONEYWELL.COM';
        CaseEmailMessage3.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage3.FromName = 'Test';
        CaseEmailMessage3.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage3.status = '0';
        CaseEmailMessage3.HtmlBody = 'Testing';
        CaseEmailMessage3.Incoming= True;
        CaseEmailMessage3.TextBody = 'Testing';
        CaseEmailMessage3.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage3);
        EmailMessage CaseEmailMessage4 = new EmailMessage();
        CaseEmailMessage4.ToAddress =  'AEROROENGINES@HONEYWELL.COM';
        CaseEmailMessage4.CcAddress = 'AEROROENGINES@HONEYWELL.COM';
        CaseEmailMessage4.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage4.FromName = 'Test';
        CaseEmailMessage4.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage4.status = '0';
        CaseEmailMessage4.HtmlBody = 'Testing';
        CaseEmailMessage4.Incoming= True;
        CaseEmailMessage4.TextBody = 'Testing';
        CaseEmailMessage4.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage4);
        EmailMessage CaseEmailMessage5 = new EmailMessage();
        CaseEmailMessage5.ToAddress =  'ROQUOTEESCALATION@HONEYWELL.COM';
        CaseEmailMessage5.CcAddress = 'ROQUOTEESCALATION@HONEYWELL.COM';
        CaseEmailMessage5.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage5.FromName = 'Test';
        CaseEmailMessage5.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage5.status = '0';
        CaseEmailMessage5.HtmlBody = 'Testing';
        CaseEmailMessage5.Incoming= True;
        CaseEmailMessage5.TextBody = 'Testing';
        CaseEmailMessage5.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage5);
        EmailMessage CaseEmailMessage6 = new EmailMessage();
        CaseEmailMessage6.ToAddress =  'AEROREPAIRS@HONEYWELL.COM';
        CaseEmailMessage6.CcAddress = 'AEROREPAIRS@HONEYWELL.COM';
        CaseEmailMessage6.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage6.FromName = 'Test';
        CaseEmailMessage6.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage6.status = '0';
        CaseEmailMessage6.HtmlBody = 'Testing';
        CaseEmailMessage6.Incoming= True;
        CaseEmailMessage6.TextBody = 'Testing';
        CaseEmailMessage6.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage6);
        insert emsglst;
        Test.stopTest();
        
    }
    static testMethod void EMAfterinsertmethod2() {
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        Case cs1 = new Case();
        cs1.Origin = 'E2CP Test';
        cs1.Status = 'Open';   
        cs1.Type = 'WEB Portal Registration';
        cs1.ContactId = conlist[0].Id;
        cs1.AccountID = acclist[0].id;
        cs1.Status_changed1__c = True;
        cs1.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Warranty').getRecordTypeId();
        cs1.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs1.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs1.Subject = 'HONEYWELL FLIGHT';
        cs1.Description = 'THE BOEING COMMUNICATION SYSTEM';
        cs1.Emailbox_Origin__c='Email-ACTinternal';
        cs1.resolution__c='test';    
        cs1.Sub_Status__c = 'Waiting for Customer response';
        cs1.External_Ref__c = 'EXPID12345';
        cs1.Customer_PO_RO_WONumber__c = '123456789';
        cs1.Product_Serial_Number__c = '987654321';
        cs1.vn_name__c = conlist[0].Id;
        cs1.Reason_for_hold__c = 'Credit Card Payment';
        cs1.Export_Compliance_Content_ITAR_EAR__c = 'No';
        cs1.Government_Compliance_SM_M_Content__c = 'No';
        cs1.OwnerID = Label.aero_default_user_id;
        c.add(cs1);   
        Case cs2 = new Case();
        cs2.Origin = 'E2CP Test';
        cs2.Status = 'Open';   
        cs2.Type = 'WEB Portal Registration';
        cs2.ContactId = conlist[0].Id;
        cs2.AccountID = acclist[0].id;
        cs2.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Repair & Overhaul').getRecordTypeId();
        cs2.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs2.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs2.Subject = 'HONEYWELL FLIGHT TRACKING REQUESTS';
        cs2.Description = 'THE BOEING COMMUNICATION SYSTEM';
        cs2.Emailbox_Origin__c='Email-ACTinternal';
        cs2.resolution__c='test';  
        cs2.R_O_Case_Origin__c = '';
        cs2.Sub_Status__c = 'Credit Hold';
        cs2.External_Ref__c = 'EXPID12345';
        cs2.Customer_PO_RO_WONumber__c = '123456789';
        cs2.Product_Serial_Number__c = '987654321';
        cs2.vn_name__c = conlist[0].Id;
        cs2.Reason_for_hold__c = 'Credit Card Payment';
        cs2.Export_Compliance_Content_ITAR_EAR__c = 'No';
        cs2.Government_Compliance_SM_M_Content__c = 'No';
        cs2.OwnerID = Label.aero_default_user_id;
        c.add(cs2);   
        insert c;
        List<EmailMessage> emsglst = new List<EmailMessage>();
        Test.startTest();
        EmailMessage CaseEmailMessage6 = new EmailMessage();
        CaseEmailMessage6.ToAddress =  'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage6.CcAddress = 'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage6.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage6.FromName = 'Test';
        CaseEmailMessage6.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage6.status = '0';
        CaseEmailMessage6.HtmlBody = 'Testing';
        CaseEmailMessage6.Incoming= True;
        CaseEmailMessage6.TextBody = 'Testing';
        CaseEmailMessage6.ParentId = cs2.Id;
        emsglst.add(CaseEmailMessage6);
        EmailMessage CaseEmailMessage5 = new EmailMessage();
        CaseEmailMessage5.ToAddress =  'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage5.CcAddress = 'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage5.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage5.FromName = 'Test';
        CaseEmailMessage5.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage5.status = '0';
        CaseEmailMessage5.HtmlBody = 'Testing';
        CaseEmailMessage5.Incoming= True;
        CaseEmailMessage5.TextBody = 'Testing';
        CaseEmailMessage5.ParentId = cs1.Id;
        emsglst.add(CaseEmailMessage5);
        insert emsglst;
        Test.stopTest();
        
    }
    static testMethod void EMAfterinsertmethod3() {
        List<Case> c = new List<Case>();
        List<Account> acclist = new List<Account>();
        List<Contact> conlist = new List<Contact>();
        Account acc1 = new Account();
        acc1.Name = 'Testweb23';
        acc1.Customer_Status__c = 'Active';
        acc1.Strategic_Business_Unit__c = 'BGA';
        acc1.CBT__c = 'BGA Aftermarket';
        acc1.Region_Name__c = 'Americas';
        acc1.Sub_Region_Name__c = 'Canada';
        acc1.Service_Level__c = 'Standard';
        acc1.Type = 'Honeywell';
        acc1.RAI_Excluded__c = FALSE;
        acc1.REPORT_ACCOUNT_NAME__c = 'Honeywell';
        
        acclist.add(acc1);
        insert acclist;
        
        Contact objContact1 = new Contact();
        objContact1.LastName = 'Swathi';
        objContact1.FirstName = 'testweb3';
        objContact1.AccountId = acclist[0].Id;
        objContact1.Primary_Email_Address__c = 'swathi.nagaraj2@test.com';
        objContact1.Email='swathi.nagaraj2@test.com.qa';
        objContact1.User_Primary_Manager_Name__c = 'Test';   
        objContact1.User_Primary_Manager_EID__c = 'H388715';
        objContact1.Employee_Number__c = 'H388715';      
        conlist.add(objContact1);
        insert conlist;
        Case cs1 = new Case();
        cs1.Origin = 'E2CP Test';
        cs1.Status = 'Open';   
        cs1.Type = 'WEB Portal Registration';
        cs1.ContactId = conlist[0].Id;
        cs1.AccountID = acclist[0].id;
        cs1.Status_changed__c = True;
        cs1.RecordtypeId = Schema.SObjectType.Case.getRecordTypeInfosByName().get('Warranty').getRecordTypeId();
        cs1.Primary_Email__c = 'swathi.nagaraj2@honeywell.com';
        cs1.Requestor_Email__c = 'swathi.nagaraj2@honeywell.com'; 
        cs1.Subject = 'HONEYWELL FLIGHT';
        cs1.Description = 'THE BOEING COMMUNICATION SYSTEM';
        cs1.Emailbox_Origin__c='Email-ACTinternal';
        cs1.resolution__c='test';    
        cs1.Sub_Status__c = 'Waiting for Customer response';
        cs1.External_Ref__c = 'EXPID12345';
        cs1.Customer_PO_RO_WONumber__c = '123456789';
        cs1.Product_Serial_Number__c = '987654321';
        cs1.vn_name__c = conlist[0].Id;
        cs1.Reason_for_hold__c = 'Credit Card Payment';
        cs1.Export_Compliance_Content_ITAR_EAR__c = 'No';
        cs1.Government_Compliance_SM_M_Content__c = 'No';
        cs1.OwnerID = Label.aero_default_user_id;
        c.add(cs1);    
        insert c;
        List<EmailMessage> emsglst = new List<EmailMessage>();
        Test.startTest();
        EmailMessage CaseEmailMessage0 = new EmailMessage();
        CaseEmailMessage0.ToAddress =  'aerorCRC-EDI@HONEYWELL.COM';
        CaseEmailMessage0.CcAddress = 'test@test.com';
        CaseEmailMessage0.BccAddress = 'test@test.com';
        CaseEmailMessage0.FromAddress = 'AEXMAILER@AEROXCHANGE.COM';
        CaseEmailMessage0.FromName = 'Test';
        CaseEmailMessage0.Subject = 'ref:Aeroxchange Repair Error Message =- AEX_ServiceOrderQuotation';
        CaseEmailMessage0.status = '1';
        CaseEmailMessage0.HtmlBody = 'Testing';
        CaseEmailMessage0.Incoming= False;
        CaseEmailMessage0.TextBody = 'Testing';
        CaseEmailMessage0.ParentId = cs1.Id;
        emsglst.add(CaseEmailMessage0);
        EmailMessage CaseEmailMessage5 = new EmailMessage();
        CaseEmailMessage5.ToAddress =  'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage5.CcAddress = 'AEROROMECHCOMPONENTSQA@HONEYWELL.COM';
        CaseEmailMessage5.FromAddress = 'test@BOEING.COM';
        CaseEmailMessage5.FromName = 'Test';
        CaseEmailMessage5.Subject = 'Repair & Overhaul ADVN Notification to Portal Customers';
        CaseEmailMessage5.status = '0';
        CaseEmailMessage5.HtmlBody = 'Testing';
        CaseEmailMessage5.Incoming= True;
        CaseEmailMessage5.TextBody = 'Testing';
        CaseEmailMessage5.ParentId = cs1.Id;
        emsglst.add(CaseEmailMessage5);
        insert emsglst;
        Test.stopTest();
        
    }
}