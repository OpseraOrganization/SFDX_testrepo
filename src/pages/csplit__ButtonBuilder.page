<apex:page controller="csplit.ButtonBuilderController" tabStyle="Setup_Wizard__tab" title="New Case Split Button">
    <!-- 10/25/17    SW    Updated API Version from 30.0 to 41.0 -->
    <apex:form >
        <apex:pageBlock title="Case Split Custom Button">
            <apex:pageBlockButtons >
                <apex:commandButton action="{!buildButton}" value="Build Button"/>
            </apex:pageBlockButtons>
            <apex:pageMessages />
            <span>Create a custom button to support specific use cases of Case Split. You may set default values for split cases and configure button behavior below.  See more instructions <a href="/apex/csplit__FieldDefaultSettings">here.</a></span><br/><br/>
            
            <apex:pageBlockSection columns="1">
                <apex:inputText label="Button Label" value="{!label}"/>
                <apex:pageBlockSectionItem helpText="Permit both types of case splitting, or only one.">
                    <apex:outputLabel value="Split Mode"/>
                    <apex:selectList value="{!mode}" size="1">
                        <apex:selectOption itemValue="both" itemLabel="Both"/>
                        <apex:selectOption itemValue="new" itemLabel="New"/>
                        <apex:selectOption itemValue="existing" itemLabel="Existing"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem helpText="Check this box if your org is using the Salesforce Console.  Leave it unchecked if it is not.">
                    <apex:outputLabel value="Enable for Salesforce Console"/>
                    <apex:inputCheckbox value="{!consoleMode}"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem helpText="Choose which group of case fields will be displayed on Case Split page.">
                    <apex:outputLabel value="Field Set"/>
                    <apex:selectList value="{!fieldSet}" size="1">
                        <apex:selectOptions value="{!fieldSetOptions}"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            
            <apex:pageBlockSection id="fields" title="Fields to Populate on Split Cases" columns="1">
                
                <apex:repeat value="{!fields}" var="field">
                    <apex:pageBlockSectionItem >
                        <apex:outputPanel >
                            <apex:commandLink action="{!removeField}" value="[Remove]" reRender="fields" style="color:#B20909; text-decoration:none; font-size:smaller;">
                                <apex:param name="field" value="{!field}"/>
                            </apex:commandLink>
                            {!$ObjectType.Case.fields[field].Label}
                        </apex:outputPanel>
                        <apex:inputField required="false" value="{!dummyCase[field]}"/>
                    </apex:pageBlockSectionItem>
                </apex:repeat>
            </apex:pageBlockSection>
            <apex:pageBlockSection id="new-field" columns="1">
                <apex:pageBlockSectionItem >
                <apex:outputLabel value="Field Label"/>
                <apex:outputPanel >
                    <apex:selectList value="{!newField}" size="1">
                        <apex:selectOptions value="{!fieldOptions}"/>
                    </apex:selectList>
                    <apex:commandButton action="{!addField}" value="Add Field" reRender="fields, new-field"/>
                </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="1">
                 <apex:pageBlockSectionItem >
                    <apex:outputLabel />
                    <apex:outputPanel >
                    Merge fields can be supplied instead of static values by using the formula builder on the following page after clicking Build Button.
                    </apex:outputPanel>
                 </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
    
    <script>
        if (sforce.console.isInConsole())
            sforce.console.setTabTitle("Case Split Setup Wizard");
        
        function openLink(url) {
            if (sforce.console.isInConsole())
                sforce.console.openPrimaryTab(null,url,true);
            else
                window.open(url,'_blank');
        }
        
        //overwrite help
        var hlinks = getElementsByClassName('links')[0];
        hlinks.innerHTML = '<a href="http://ic.force.com/csdocs" target="_new">Documentation</a> | <a href="http://kb.internetcreations.com/pkb_Home?l=en_US&c=Products%3ACase_Split&type=" target="_new">Knowledge Base</a> | <a href="mailto:casesplit@internetcreations.com">casesplit@internetcreations.com</a> <img src="/s.gif" alt="Help" class="helpIcon" title="Help">';
        
        hlinks.style.fontSize = 'larger';
        hlinks.style.position = 'absolute';
        hlinks.style.float  = 'right';
        hlinks.style.right = '0%';
    </script>

    <style type="text/css"> 
        fieldset {border:0;display:inline;padding:10px;vertical-align:top;}
        .primaryPalette {background-color:#D36D00 !important;}
        .brdPalette, .secondaryPalette {border-top-color:#D36D00 !important;}
        .pbSubheader {
            background: #e96e25 !important; /* Fallback to solid color for older browsers */
            background-image: linear-gradient(to top, #b95e15, #f97e35) !important;
            border-radius: 4px;
            text-shadow: -1px 0 #b95e15, 0 1px #b95e15,1px 0 #b95e15, 0 -1px #b95e15;
        }
        body .pbBody table.list tr.headerRow th {
            background: #e96e25 !important; /* Fallback to solid color for older browsers */
            background-image: linear-gradient(to top, #b95e15, #f97e35) !important;
            border-radius: 4px;
            text-shadow: -1px 0 #b95e15, 0 1px #b95e15,1px 0 #b95e15, 0 -1px #b95e15;
        }
    </style>
</apex:page>